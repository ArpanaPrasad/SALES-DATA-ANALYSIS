
CREATE DATABASE ECOMM_CASE_STUDY_DA

USE ECOMM_CASE_STUDY_DA

SELECT * FROM ORDERS

-- THERE ARE MANY BLANK COLUMNS OTHER THAN THE ORIGINAL COLUMNS SO FILXING IT BELOW 

SELECT [Row ID]	, [Order ID] , 	[Order Date] ,	[Ship Date] , 	[Ship Mode] , 
[Customer ID] ,	[Customer Name]	Segment	, City	 , [State]	,Country	[Postal Code],
Market ,Region , [Product ID], Category , [Sub-Category],[Product Name]	,Sales	,
Quantity ,	Discount, Profit, [Shipping Cost],[Order Priority]
INTO ORDERS_TBL
FROM ORDERS;

SELECT * FROM PEOPLE

SELECT PERSON , REGION INTO PEOPLE_TBL
FROM PEOPLE

SELECT * FROM [RETURNS]

SELECT RETURNED , [ORDER ID], MARKET INTO RETURNS_TBL
FROM [RETURNS]

--
SELECT * FROM ORDERS_TBL
SELECT * FROM PEOPLE_TBL
SELECT * FROM RETURNS_TBL

--Join all the tables considering Order table as base table 

SELECT O.[Order ID] , O.[Order Date],O.[Ship Date],O.[Ship Mode],
O.[Customer ID],O.City , O.Segment,O.[State] , O.[Postal Code],O.Market,
O.Region,O.[Product ID],O.Category,O.[Sub-Category],O.[Product Name],
O.Sales,O.Quantity,O.Discount,O.Profit,O.[Shipping Cost],
O.[Order Priority],P.PERSON,R.RETURNED
INTO FINAL_TBL
FROM ORDERS_TBL AS O
LEFT JOIN PEOPLE_TBL AS P
ON O.REGION = P.REGION

LEFT JOIN RETURNS_TBL AS R
ON O.[ORDER ID] = R.[ORDER ID]

--Created a table after joining all 3 tables
SELECT * FROM FINAL_TBL

-- information about database objects
EXEC sp_help 'FINAL_TBL';

SELECT 
    COLUMN_NAME, 
    DATA_TYPE, 
    CHARACTER_MAXIMUM_LENGTH, 
    IS_NULLABLE
FROM 
    INFORMATION_SCHEMA.COLUMNS
WHERE 
    TABLE_NAME = 'FINAL_TBL';

--Calculating total sales  by city 

SELECT CITY,SUM(SALES) AS TOTAL_SALES FROM FINAL_TBL
GROUP BY CITY
ORDER BY TOTAL_SALES DESC;

SELECT Region,SUM(SALES) AS TOTAL_SALES FROM FINAL_TBL
GROUP BY Region
ORDER BY TOTAL_SALES DESC;


--Calculating total sales  by CATEGORY & SUB-CATEGORY

SELECT Category , [Sub-Category], SUM(SALES) AS TOTAL_SALES
FROM FINAL_TBL
GROUP BY Category , [Sub-Category]
ORDER BY TOTAL_SALES DESC;

--Calculating total shipping mode by  No of Customers  

SELECT [Ship Mode] , COUNT([CUSTOMER ID]) AS COUNT_OF_CUSTS
FROM FINAL_TBL
GROUP BY [Ship Mode]
ORDER BY COUNT_OF_CUSTS DESC


-- TOTAL ITEMS SOLD FOR EACH CATEGORY 
SELECT [Sub-Category],SUM(Quantity) AS TOTAL_SOLD_ITEMS
FROM FINAL_TBL
WHERE RETURNED IS NULL
GROUP BY [Sub-Category]
ORDER BY TOTAL_SOLD_ITEMS DESC

--TOTAL Sales

SELECT SUM(SALES) AS TOTAL_SALES FROM FINAL_TBL

--TOP 5 BEST SELLING ITEMS
SELECT TOP 5 [Sub-Category],SUM(Quantity) AS TOTAL_SOLD_ITEMS
FROM FINAL_TBL
WHERE RETURNED IS NULL
GROUP BY [Sub-Category]
ORDER BY TOTAL_SOLD_ITEMS DESC

--DATE

SELECT * FROM FINAL_TBL

SELECT  MIN([ORDER DATE]) AS OLDEST_DATE,
		MAX([ORDER DATE]) AS LATEST_DATE 
FROM FINAL_TBL

--- TIME PERIOD OF THE DATA IN YEAR & MONTH

SELECT DATEDIFF(YEAR  ,OLDEST_DATE,LATEST_DATE) AS DIFFERENCE_IN_YEARS ,
	   DATEDIFF(MONTH  ,OLDEST_DATE,LATEST_DATE) AS DIFFERENCE_IN_MONTHS
FROM 
	(SELECT  MIN([ORDER DATE]) AS OLDEST_DATE,
	MAX([ORDER DATE]) AS LATEST_DATE	
	FROM FINAL_TBL) AS X


--analyzing sales trends over time

SELECT YEAR([ORDER DATE]) AS [YEAR],
	MONTH([ORDER DATE]) AS [MONTH],
	SUM(SALES) AS TOTAL_SALES
FROM FINAL_TBL
GROUP BY YEAR([ORDER DATE]) , MONTH([ORDER DATE])
ORDER BY [YEAR],[MONTH]

